<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springbootvue.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.example.springbootvue.model.User" >
    <id column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="class" property="classNo" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    student_no,name,sex,class,phone
  </sql>
  <select id="getAllUsers" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="getAllUsersByInput" resultMap="BaseResultMap" parameterType="com.example.springbootvue.model.User" >
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="studentNo!=''">
        student_no=#{studentNo}
      </if>
      <if test="name!=''">
        AND name like '%${name}%'
      </if>
      <if test="classNo!=''">
        AND class=#{classNo}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where student_no = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where student_no = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.springbootvue.model.User" >
    insert into user (student_no, name, sex, class, phone
      )
    values (#{studentNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{classNo,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springbootvue.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springbootvue.model.User" >
    update user
    <set >
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springbootvue.model.User" >
    update user
    set sex = #{sex,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      class = #{classNo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where student_no = #{studentNo,jdbcType=INTEGER}
  </update>

  <select id="findByUsernameAndage" resultType="com.example.springbootvue.model.User" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user where 1=1
    <if test="age != null" >
      and age = #{age,jdbcType=VARCHAR}
    </if>
    <if test="name != null" >
      and name = #{name,jdbcType=VARCHAR}
    </if>
    limit 1
  </select>
</mapper>